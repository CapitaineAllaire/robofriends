{"version":3,"sources":["reportWebVitals.js","component/Card.js","component/Cardlist.js","component/Searchbox.js","component/Scroll.js","component/ErrorBoundry.js","component/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0CCSCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACK,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACnB,gCACE,6BAAKF,IACL,4BAAIC,WCcDK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACC,cAAC,EAAD,CAEGR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMAC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBAAOA,UAAU,mCAClBW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEAI,G,MATA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,aCgBMC,E,kDAlBd,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CAAEC,UAAU,GAFV,E,qDAKnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAU,CAAEJ,UAAU,M,oBAI5B,WACC,OAAIG,KAAKJ,MAAMC,SACP,4DAEMG,KAAKX,MAAMK,a,GAfAQ,aC+CZC,E,kDAzCb,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAd1C,EAAKX,MAAQ,CACZlB,OAAO,GACPK,YAAa,IAJD,E,qDASd,WAAqB,IAAD,OACnByB,MAAM,8CACH5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UACzB9C,MAAK,SAAA+C,GAAK,OAAI,EAAKV,SAAS,CAACvB,OAAQiC,S,oBAQ1C,WAAW,IAAD,EACuBX,KAAKJ,MAA7BlB,EADC,EACDA,OAAQK,EADP,EACOA,YACV6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAErD,OAAQrC,EAAOuC,OAEX,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQkC,WAPJ,6C,GA1BVV,aCDlBgB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SAM5B5D,M","file":"static/js/main.e13c38b7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'tachyons';\n\nconst Card = ({name, email, id}) => {\n\treturn (\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\n          <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n          </div>\n        </div>  \n\t);\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst Cardlist = ({robots}) => { \n\treturn (\n\t  <div>\n\t    {\n\t      robots.map((user, i) => {\n\t\t    return ( \n\t\t  \t  <Card \n\t\t        key={i} \n\t\t        id={robots[i].id} \n\t\t        name={robots[i].name} \n\t\t        email={robots[i].email}\n\t\t      /> \n\t\t    );\n\t      })\n\t    }  \n\t  </div>\n\t)\n}\n\nexport default Cardlist","import React from 'react';\n\n\nconst Searchbox = ({searchfield, searchChange}) => {\n\n  return ( \n    <div className=\"pa2\">\t\n      <input className=\"pa3 ba b--green bg-lightest-blue\"\n\t    type='search' \n\t    placeholder='Search robots'\n\t    onChange={searchChange} \n\t  /> \n    </div>\n\t);\n\n}\n\nexport default Searchbox;","import React from 'react';\n\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n\t\t{props.children}\n\t\t</div>\n\t);\n};\n\n\nexport default Scroll","import react, {Component} from 'react';\n\n\nclass ErrorBoundry extends Component {\n\tconstructor(props) {\n\t    super(props)\n\t    this.state = { hasError: false }\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState( { hasError: true })\n\n\t}\n\n\trender() {\n\t\tif (this.state.hasError)  {\n\t\t\treturn <h1>Oups...that is not good!!!</h1>\n\t\t}\n\t\telse { return this.props.children }\n\t}\n}\n\nexport default ErrorBoundry","import React, {Component} from 'react';\nimport Cardlist from './Cardlist';\nimport Searchbox from './Searchbox';\nimport '../style/App.css';\nimport Scroll from './Scroll';\nimport ErrorBoundry from './ErrorBoundry'\n\n\nclass App extends Component {\n  constructor() {\n  \tsuper()\n  \tthis.state = {\n  \t\trobots:[],\n  \t\tsearchfield: ''\n  \t}\n  }\n\n\n  componentDidMount() {\n  \tfetch(\"https://jsonplaceholder.typicode.com/users\")\n  \t  .then(response => response.json())\n      .then(users => this.setState({robots: users}));\n  }\n\n  onSearchChange = (event) => {\n  \tthis.setState({ searchfield: event.target.value })\n  }\n\n\n  render()  {\n    const {robots, searchfield } = this.state;\n  \tconst filteredRobots = robots.filter(robot => {\n  \t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n  \t})\n    return !robots.length ? <h1>Loading</h1> :\n     \t(\n        <div className='tc'> \n\t\t      <h1 className='f1'>robofriends</h1>\n\t\t      <Searchbox searchChange={this.onSearchChange}/>\n\t\t      <Scroll>\n            <ErrorBoundry>\n              <Cardlist robots={filteredRobots}/> \n            </ErrorBoundry>  \n          </Scroll>\n        </div>  \n  \t  );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './component/App';\n\nReactDOM.render(\n    <App />\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}